-- 1. What is the total amount each customer spent at the restaurant?


WITH CTE AS (
    SELECT SALES.CUSTOMER_ID, SALES.PRODUCT_ID, MENU.PRICE
    FROM
    DANNYS_DINER.SALES SALES
    INNER JOIN
    DANNYS_DINER.MENU MENU
    ON SALES.PRODUCT_ID=MENU.PRODUCT_ID
),
SOLUTION AS (
    SELECT CUSTOMER_ID, SUM(PRICE) TOTAL_PRICE
    FROM CTE
    GROUP BY CUSTOMER_ID
)

SELECT * FROM SOLUTION;


-- 2. How many days has each customer visited the restaurant?


SELECT SALES.CUSTOMER_ID, COUNT(DISTINCT SALES.ORDER_DATE) DAYS_VISITED
FROM DANNYS_DINER.SALES SALES
GROUP BY SALES.CUSTOMER_ID;


-- 3. What was the first item from the menu purchased by each customer?


WITH CTE AS (
    SELECT SALES.CUSTOMER_ID, SALES.PRODUCT_ID, SALES.ORDER_DATE, MENU.PRODUCT_NAME,
    ROW_NUMBER() OVER(PARTITION BY SALES.CUSTOMER_ID ORDER BY SALES.ORDER_DATE, SALES.PRODUCT_ID) RN
    FROM 
    DANNYS_DINER.SALES SALES
    INNER JOIN
    DANNYS_DINER.MENU MENU
    ON SALES.PRODUCT_ID=MENU.PRODUCT_ID
)

SELECT CUSTOMER_ID, PRODUCT_NAME 
FROM CTE
WHERE RN=1


-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?


WITH CTE AS (
    SELECT SALES.PRODUCT_ID, COUNT(SALES.PRODUCT_ID) COUNTER
    FROM DANNYS_DINER.SALES SALES
    GROUP BY SALES.PRODUCT_ID
)

SELECT MENU.PRODUCT_NAME FROM DANNYS_DINER.MENU MENU
INNER JOIN
CTE ON MENU.PRODUCT_ID=CTE.PRODUCT_ID
WHERE COUNTER IN (SELECT MAX(COUNTER) FROM CTE);


-- 5. Which item was the most popular for each customer?


WITH CTE AS (
    SELECT SALES.CUSTOMER_ID, SALES.PRODUCT_ID, COUNT(SALES.PRODUCT_ID) COUNTER
    FROM DANNYS_DINER.SALES SALES
    GROUP BY SALES.CUSTOMER_ID, SALES.PRODUCT_ID
),
SOLUTION AS (
    SELECT CTE.CUSTOMER_ID, MENU.PRODUCT_NAME,
    RANK() OVER(PARTITION BY CTE.CUSTOMER_ID ORDER BY CTE.COUNTER DESC) RN
    FROM CTE
    INNER JOIN
    DANNYS_DINER.MENU MENU
    ON CTE.PRODUCT_ID=MENU.PRODUCT_ID
)

SELECT CUSTOMER_ID, PRODUCT_NAME FROM SOLUTION WHERE RN=1


-- 6. Which item was purchased first by the customer after they became a member?


WITH CTE AS(
    SELECT SALES.CUSTOMER_ID, MENU.PRODUCT_NAME, SALES.ORDER_DATE,
    RANK() OVER(PARTITION BY SALES.CUSTOMER_ID ORDER BY SALES.ORDER_DATE) RN
    FROM DANNYS_DINER.SALES SALES
    INNER JOIN
    DANNYS_DINER.MEMBERS MEMBERS
    ON SALES.CUSTOMER_ID=MEMBERS.CUSTOMER_ID
    AND SALES.ORDER_DATE>=MEMBERS.JOIN_DATE
    INNER JOIN
    DANNYS_DINER.MENU
    ON SALES.PRODUCT_ID=MENU.PRODUCT_ID
)

SELECT CUSTOMER_ID, PRODUCT_NAME, ORDER_DATE FROM CTE
WHERE RN=1


-- 7. Which item was purchased just before the customer became a member?


WITH CTE AS(
    SELECT SALES.CUSTOMER_ID, MENU.PRODUCT_NAME, SALES.ORDER_DATE,
    RANK() OVER(PARTITION BY SALES.CUSTOMER_ID ORDER BY SALES.ORDER_DATE DESC) RN
    FROM DANNYS_DINER.SALES SALES
    INNER JOIN
    DANNYS_DINER.MEMBERS MEMBERS
    ON SALES.CUSTOMER_ID=MEMBERS.CUSTOMER_ID
    AND SALES.ORDER_DATE<MEMBERS.JOIN_DATE
    INNER JOIN
    DANNYS_DINER.MENU
    ON SALES.PRODUCT_ID=MENU.PRODUCT_ID
)

SELECT CUSTOMER_ID, PRODUCT_NAME, ORDER_DATE FROM CTE
WHERE RN=1


-- 8. What is the total items and amount spent for each member before they became a member?


SELECT SALES.CUSTOMER_ID, COUNT(SALES.PRODUCT_ID) TOTAL_ITEMS, 
SUM(MENU.PRICE) AMOUNT_SPENT
FROM DANNYS_DINER.SALES SALES
INNER JOIN
DANNYS_DINER.MENU MENU
ON SALES.PRODUCT_ID=MENU.PRODUCT_ID
INNER JOIN
DANNYS_DINER.MEMBERS MEMBERS
ON SALES.CUSTOMER_ID=MEMBERS.CUSTOMER_ID
AND SALES.ORDER_DATE<MEMBERS.JOIN_DATE
GROUP BY SALES.CUSTOMER_ID


-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?


WITH CTE AS (
    SELECT SALES.CUSTOMER_ID,
    CASE WHEN UPPER(MENU.PRODUCT_NAME)='SUSHI' THEN MENU.PRICE*20
    ELSE MENU.PRICE*10 END AS POINTS
    FROM DANNYS_DINER.SALES
    INNER JOIN
    DANNYS_DINER.MENU MENU
    ON SALES.PRODUCT_ID=MENU.PRODUCT_ID
)

SELECT CUSTOMER_ID, SUM(POINTS) POINTS_EARNED FROM CTE
GROUP BY CUSTOMER_ID -- I have assumed all members have earned points whether they're members or not


-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?


WITH CTE AS (
    SELECT SALES.CUSTOMER_ID,
    CASE WHEN ORDER_DATE BETWEEN JOIN_DATE AND (JOIN_DATE+6) THEN MENU.PRICE*20
    WHEN UPPER(MENU.PRODUCT_NAME)='SUSHI' THEN MENU.PRICE*20
    ELSE MENU.PRICE*10 END AS POINTS
    FROM DANNYS_DINER.SALES SALES
    INNER JOIN DANNYS_DINER.MEMBERS MEMBERS
    ON SALES.CUSTOMER_ID=MEMBERS.CUSTOMER_ID
    INNER JOIN DANNYS_DINER.MENU MENU
    ON SALES.PRODUCT_ID=MENU.PRODUCT_ID
    WHERE SALES.ORDER_DATE < '2021-02-01'
)

SELECT CUSTOMER_ID, SUM(POINTS) POINTS_EARNED FROM CTE
GROUP BY CUSTOMER_ID


-- Bonus Questions

-- Join All The Things


SELECT SALES.CUSTOMER_ID, SALES.ORDER_DATE, MENU.PRODUCT_NAME, MENU.PRICE, CASE WHEN MEMBERS.JOIN_DATE<=SALES.ORDER_DATE THEN 'Y' ELSE 'N' END AS MEMBER_FLAG
FROM DANNYS_DINER.SALES SALES
INNER JOIN
DANNYS_DINER.MENU MENU
ON SALES.PRODUCT_ID=MENU.PRODUCT_ID
LEFT OUTER JOIN
DANNYS_DINER.MEMBERS MEMBERS
ON SALES.CUSTOMER_ID=MEMBERS.CUSTOMER_ID
ORDER BY SALES.CUSTOMER_ID, SALES.ORDER_DATE


-- Rank All The Things


SELECT SALES.CUSTOMER_ID, SALES.ORDER_DATE, MENU.PRODUCT_NAME, MENU.PRICE,'Y' AS MEMBER_FLAG,
CAST(DENSE_RANK() OVER(PARTITION BY SALES.CUSTOMER_ID ORDER BY SALES.ORDER_DATE) AS CHAR) AS RANKING
FROM DANNYS_DINER.SALES SALES
INNER JOIN
DANNYS_DINER.MENU MENU
ON SALES.PRODUCT_ID=MENU.PRODUCT_ID
LEFT OUTER JOIN
DANNYS_DINER.MEMBERS MEMBERS
ON SALES.CUSTOMER_ID=MEMBERS.CUSTOMER_ID
WHERE MEMBERS.JOIN_DATE<=SALES.ORDER_DATE

UNION ALL

SELECT SALES.CUSTOMER_ID, SALES.ORDER_DATE, MENU.PRODUCT_NAME, MENU.PRICE,'N' AS MEMBER_FLAG,
'NULL' AS RANKING
FROM DANNYS_DINER.SALES SALES
INNER JOIN
DANNYS_DINER.MENU MENU
ON SALES.PRODUCT_ID=MENU.PRODUCT_ID
LEFT OUTER JOIN
DANNYS_DINER.MEMBERS MEMBERS
ON SALES.CUSTOMER_ID=MEMBERS.CUSTOMER_ID
WHERE MEMBERS.JOIN_DATE>SALES.ORDER_DATE
OR MEMBERS.JOIN_DATE IS NULL

ORDER BY CUSTOMER_ID, ORDER_DATE
